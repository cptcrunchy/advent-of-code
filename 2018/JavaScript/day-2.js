var data = [
	"vefnvyxzbodgpnpkumawhijsc",
	"vefqtyxzsddglnppumawhijsc",
	"vefqtywzbodglnkkubawhijsc",
	"vefqpyxzbozglnpkumawhiqsc",
	"vefqtyxzbotgenpkuyawhijsc",
	"vefqtyxzbodglnlkumtphijsc",
	"wefqtykzbodglnpkumawhijss",
	"vynqtyxzbodglnpkumawrijsc",
	"vefqtyxlbodgcnpkumawhijec",
	"vefqtyxzbodmlnpnumawhijsx",
	"vefqtyxzbqdbdnpkumawhijsc",
	"vefqtyxzlodblnpkuiawhijsc",
	"vefqtyizrodelnpkumawhijsc",
	"veffjyxzgodglnpkumawhijsc",
	"vefqjyxzbodalnpkumadhijsc",
	"vefqtidzbodglnpkumawhdjsc",
	"vefqtygzbodglnpkumawhijfc",
	"zefqtyxzbodglfhkumawhijsc",
	"mefqtyxzbolglnpkumaehijsc",
	"nefqqyxzbodglnhkumawhijsc",
	"vwfqvyxzbodglnpcumawhijsc",
	"vefqtyxzbokgltpkumavhijsc",
	"vefciyxzbodglnmkumawhijsc",
	"vefptyxzbodglnpkuhashijsc",
	"vefqtyxzrodglnpkxmawhiqsc",
	"vefqtyxzbotglnpkumawriwsc",
	"vufqtyxzbodglnplumawhijvc",
	"vefutykzbodglnpkumaahijsc",
	"vefqtyxqbodgllprumawhijsc",
	"vegqttxzbodgllpkumawhijsc",
	"vefqtyxzsodglnpkumawdijsc",
	"vefqtyxkbodglnfkumawhijsj",
	"vefqtyxzbodnlnpcumawhijnc",
	"vefqtyxzbodglfpkuocwhijsc",
	"vecqtyxzbbdganpkumawhijsc",
	"vefytyxzbodglnpkubgwhijsc",
	"vefxtyazbomglnpkumawhijsc",
	"vefqgyxzbodglnpkumawyiksc",
	"vefqtyxzbodglnfkummwhijsc",
	"vefqtyxzbbdglnpkumswhijsc",
	"vefqtyxzxodglnpkumuuhijsc",
	"vezqtyxzbydclnpkumawhijsc",
	"vefqtyxzbohglnpkumawdijjc",
	"vejqtyxzbodrlnpkumawhijsd",
	"vefitzxzbxdglnpkumawhijsc",
	"vefutyxzbvdglnikumawhijsc",
	"vefqtyazbodgqnbkumawhijsc",
	"vefqtyxzbolglnpkwmajhijsc",
	"vefqtyxzjodglnpgwmawhijsc",
	"vefhtyxzbodglbpaumawhijsc",
	"vexqtyxzbodglnpkumawrijsc",
	"vefqtyxwbodglnpkumawhbxsc",
	"vefqtyxzbodgsnpkudawsijsc",
	"vwfqtyxzbonglnwkumawhijsc",
	"vefqtyxzjodglnpkfmawhwjsc",
	"vefqtyxzbodglntkumughijsc",
	"vefctyxzbodglnpkumawhiwsx",
	"vefqtyvzbodglnpkumawhijsb",
	"fefqtyxzlodglnphumawhijsc",
	"vefqtyxzfowglnpkumaehijsc",
	"vhfvtyxzbodgqnpkumawhijsc",
	"fefqtyxzbodglapkumuwhijsc",
	"vefqclxzbodglnzkumawhijsc",
	"vefqtyxzbodglnckumcwhijsc",
	"vefqtyxzkodglnpkymawgijsc",
	"vefqtyxzbodgfnpkumafhizsc",
	"vefqtyxzbodglnxkumavhijsf",
	"vevqtyxzbodgpnpkurawhijsc",
	"vefqtyxziodglnpkubawhijss",
	"refqtpxzyodglnpkumawhijsc",
	"vefqfyxzbodglcpkxmawhijsc",
	"vefdtyxzbodglnpkumvwhijsn",
	"verqtyxzbodglnpkwmawhijuc",
	"vecjtyxzboxglnpkumawhijsc",
	"vefqtyxzbodglnpkqmaxhifsc",
	"tnfqtyxzbodglnpkumawhijmc",
	"vefqtyxzbodelnpkumawhijsz",
	"vefqtyxzbbdgvnpkumawhijsc",
	"vefqlyhzbodglnpkumtwhijsc",
	"oefqtyxlbodglnpkumawhyjsc",
	"vefqsydzjodglnpkumawhijsc",
	"veybtyxzbodglnpkumawhijsn",
	"vefqtyhzbodgvnpmumawhijsc",
	"vefqxyazboddlnpkumawhijsc",
	"vefqtyxzbohglqpkumawhijsc",
	"eefhtyxzbodglnpkkmawhijsc",
	"vefqtyxzbodglnpkulowhijrc",
	"veqqtyxzbodgknpkumawhijsk",
	"vefqtqxzbodglnpkumawiijsc",
	"vefqtyxzboxglnpvuqawhijsc",
	"vefquyxzbodglwwkumawhijsc",
	"vefqtyxzbodnlnpkumawhgjbc",
	"vdfqthxdbodglnpkumawhijsc",
	"vefqtyxzbodllnpkumawhujsb",
	"vefqtyxzboyglnpkumowhijsc",
	"vefktyxzbomglnpzumawhijsc",
	"vefqtyxzbodhlnnkrmawhijsc",
	"vefqtyxrbodglnpkujaehijsc",
	"vefqtyzzbodglnpkumrwhijsb",
	"vefqtyxzpodglfpkumawhijsc",
	"vefqtyxibodglkpyumawhijsc",
	"refqtyxzbodglnpkudawhajsc",
	"vifqtyxzbodglxpkumawhijlc",
	"xefqtyxzbedglnpkumawhijsp",
	"vnfqtyxzbopglnpkuqawhijsc",
	"vefqtyxkbodglnpoumawoijsc",
	"vefwtyxzbodglnpksmawhijsc",
	"vkfqtyxzbodglnpkdmawhijsa",
	"cefytyxzzodglnpkumawhijsc",
	"vefqtkxzbodglnpktqawhijsc",
	"vezqhyxzbodglnpkumawhijsc",
	"refqtyxzbodgunpkumpwhijsc",
	"vefqtaxzbodgknpkumawhijic",
	"vefqtyxzbodglnpkuxawsijsc",
	"vefqtyxzbodglkpvumawhjjsc",
	"vefqtyxzkodglnpkumawhhjsc",
	"zefqtyxzbotglnpkumawhxjsc",
	"vefqtxpzbodglnpkumawzijsc",
	"gefqtyxzbodglnpkrmawhijsc",
	"vefqlyxzbodglnpkumilhijsc",
	"befqtyxzbodglnpkumawhiesc",
	"vefqtyxzbydelnpkumahhijsc",
	"vefntyxzbodglnpkumaehijsw",
	"verqtyxztodglopkumawhijsc",
	"vefqtyxzdodgwrpkumawhijsc",
	"vefqtyxibodglnikumawhtjsc",
	"vafqtyxzbodglnpkurawhijsc",
	"vefqtyxwbodglnpaumawoijsc",
	"vefqtyxzoodglndknmawhijsc",
	"vdfqtlxzyodglnpkumawhijsc",
	"vefqtyxzbodglngfumawhinsc",
	"sefqtyxzbodglnpkumawhijek",
	"voestyxzbodglnpkumawhijsc",
	"vefqtyxzboaglnprumawhijsc",
	"vefqtybzbodgwnpkumawwijsc",
	"vefqtyxzdwdglnpkvmawhijsc",
	"vlfqtyxzbodglnpkrmawhixsc",
	"vefqtyxwbodglepkumawhijsd",
	"vefqtbxzbodglnqkumawhijmc",
	"vefqtzxzbodglnpkumuzhijsc",
	"vefqtyxzbodglnpkumawzwnsc",
	"vwfqtyxzboiglnpkumawhijsg",
	"tehotyxzbodglnpkudawhijsc",
	"vegqtyxzbodglnpyumawhijsl",
	"vecqtyxzbsdglnpkumawhojsc",
	"vefqtyxzbodmlnpkumaghijfc",
	"vefqtyxzxodglnpkumanvijsc",
	"vefqtyxzbodglnbiugawhijsc",
	"vefqtlxzbodglnplumawhijsc",
	"vefqtyxvbodglnpkumaldijsc",
	"mefqtyxzbodgvnpkuuawhijsc",
	"vefqtyxzbodglnpkymeuhijsc",
	"vefqtyxzuodganpsumawhijsc",
	"xefqtyxzbodglnpkumgwhijwc",
	"vefgtyxzbodglnpkudawxijsc",
	"hefqtyxzbodglnpkumawhejsc",
	"fefqtyxzbzdglnpkusawhijsc",
	"vefqtyszqodgljpkumawhijsc",
	"vefqtylzboiglnpkumrwhijsc",
	"vefqtyxzltdglnpkumawhijsu",
	"befqtyxzbodglnpqumawhijsi",
	"vefqtyozpodglnpkumawhijsa",
	"vefqtyxzpopglnpkumawhijsc",
	"vefqtyxzbodglnfkqmawhijsp",
	"vefqtyxzbodgliakumawhijsf",
	"vefqtymzrodgfnpkumawhijsc",
	"vejqtyxzbodglnpkumawhijuc",
	"vefqtyxzbodflnpkxwawhijsc",
	"vrfqtyxzbodglnpkumashijsc",
	"qefqtyxzbwdglnpkumawvijsc",
	"vefqtkxzbodgltpkumawhijsc",
	"vefdtyxzbodguxpkumawhijsc",
	"veqqtyxvbodglnykumawhijsc",
	"vefqtypzcovglnpkumawhijsc",
	"vefqnyxzbosglnpkumdwhijsc",
	"vefstjxzbodslnpkumawhijsc",
	"vefqzyxzpodglnpkummwhijsc",
	"vefqkyxzbodglnhgumawhijsc",
	"vufqvyxzbodklnpkumawhijsc",
	"vefotyxzhodglnpkumawhijsk",
	"vefqtyxzbokglnpkumawvcjsc",
	"vefqtyxzbolglnpkumawoijsc",
	"vefqtywzoodglfpkumawhijsc",
	"vehqtqxzbodglnpkumawhcjsc",
	"qefqtyxzbodolnpkumjwhijsc",
	"vefqtyxzbodglrpkunawgijsc",
	"vefqtyxzbodglamkumawdijsc",
	"vefvtyzzbodllnpkumawhijsc",
	"vefqtyxzbldglnpfcmawhijsc",
	"vefppyxzbodglnpkucawhijsc",
	"vefquyuzbodglnpkumkwhijsc",
	"vefqtyxzbodgqxpkumawhivsc",
	"tefotyxzbodglnpkudawhijsc",
	"vefqtyxzbodgbnmkuzawhijsc",
	"vefqtyxzbodgsnpkumzwhijsc",
	"vhfqtyxzbodolnpkumawhijsz",
	"vefvtyxzbodwlnpkusawhijsc",
	"iemqtyxzbodglnpkumawhiasc",
	"vtfqtyxzbqdglnpkumawuijsc",
	"aesqtyxzbodglnpkumawhijsj",
	"vefqtyxzbodalmpkumawhihsc",
	"vefqtlxzbodgznpkkmawhijsc",
	"vefqbyxzbodglgpkubawhijsc",
	"vefqtyxnbodgxnpkumswhijsc",
	"vefqtyxzkodvlnukumawhijsc",
	"vefqtyzzbocglnpkumafhijsc",
	"vhfqtyxzbodglmpkumgwhijsc",
	"vsfrtyxzbodnlnpkumawhijsc",
	"vefqtyxzbxdglnpkujcwhijsc",
	"vefqtyvzrodglnphumawhijsc",
	"eetatyxzbodglnpkumawhijsc",
	"vefqtyxzbodglnpzumaoqijsc",
	"vefqtyyzbodglnvkumawhijsc",
	"vefqbyxzbodnlnpkumawhijsi",
	"vefqtyxzbodgrnpkumawrijsc",
	"vebqtyxzbodglnpkumazhiasc",
	"qeretyxzbodglnpkumawhijsc",
	"vefqtyxzyodglapkumvwhijsc",
	"vesqxyxzbodglnpvumawhijsc",
	"vefqtyxeborglnpkufawhijsc",
	"vecqtyxzbodflnpkumawnijsc",
	"vefdpyxtbodglnpkumawhijsc",
	"vefqtyfzbodclnpkymawhijsc",
	"vefqtywzbodglnpxumawhiusc",
	"vefqtyxzbodglnpkumawzbjwc",
	"vewqtyxdbodglnpxumawhijsc",
	"vefqtyxzgocglnpkgmawhijsc",
	"vufqtyxzbodggnpkuzawhijsc",
	"vefqtynzlodgllpkumawhijsc",
	"vedqtyxzbodghnpkumawhujsc",
	"vefqtyxlbodgnnpkpmawhijsc",
	"vefqtyxzboqglnpkzmawhijec",
	"vefqtyxzbodglnpkfmwwyijsc",
	"wefqtkxzbodzlnpkumawhijsc",
	"vefqtyxvbodglnpkufawhyjsc",
	"vefqtyxzbodgltpkumawhqmsc",
	"vefctyxzbodglfpkumathijsc",
	"vefqtyxzbodgfnpkuuawhijfc",
	"vefqttxzbodglnpmumawhijwc",
	"vefqtyxzbodglnpkqmawhihsj",
	"vefqtyxzbsdglcnkumawhijsc",
	"vbiqtyxzbodglnpkumawhijlc",
	"nefqtylzvodglnpkumawhijsc",
	"vefqtyxzbddglnpkumcwhijsc",
	"vefwtyxzbodglnpkgmawhijxc",
	"vefqtyxljodglnpkumxwhijsc",
	"vefqtyxzbodglnpkuprwhijsd",
	"cxfqtyxzbldglnpkumawhijsc",
	"vetqtyxzbojglnpkumewhijsc",
	"vxfqtyxzbtdglnpkbmawhijsc",
];

var sample = "abcde fghij klmno pqrst fguij axcye wvxyz"

var getMaxOccurrence = function (input) {
	var result = input.reduce((acc, val) => {
		var chars = [...val]
		var prev = {}

		for (let char of chars) {
			prev[char] = prev[char] ? prev[char] + 1 : 1
		}

		if (Object.keys(prev).some(key => prev[key] === 2)) acc[0]++
		if (Object.keys(prev).some(key => prev[key] === 3)) acc[1]++
		return acc
	}, [0, 0])
	return result[0] * result[1]
}

var findMatchingIDs = function (arr) {
	var result = [];
	for (let i = 0; i < arr.length; i++) {
		for (let j = i + 1; j < arr.length; j++) {
			var charsI = [...arr[i]]
			var charsJ = [...arr[j]]

			let diff = charsI.reduce((a, c, i) => a + (c === charsJ[i] ? 0 : 1), 0)

			if (diff === 1) {
				result.push(arr[i])
				result.push(arr[j])
			}
		}
	}
	return result
}

var sampleData = sample.split(' ')

getMaxOccurrence(data)//?
findMatchingIDs(data)//?